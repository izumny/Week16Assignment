{"ast":null,"code":"var _jsxFileName = \"/Users/akimotoidzumi/Desktop/Front-End-Assighnment/Promineo_Tech/Week-16-React_Router_and_React_Bootstrap/Unit Final Project/src/Components/YourCloset.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react'; //used state hook and effect fook\nimport DeleteItemButton from '../Components/DeleteItemButton';\nimport UpdateItemButton from '../Components/UpdateItemButton';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YourCloset() {\n  _s();\n  const MOCK_API_URL = \"https://66038fa12393662c31cf3170.mockapi.io/12345/clothes\";\n  const [clothes, setClothes] = useState([]);\n  //POST\n  const [newName, setNewName] = useState('');\n  const [newType, setNewType] = useState('');\n  const [newColor, setNewColor] = useState('');\n  const [newSize, setNewSize] = useState('');\n  const [newBrand, setNewBrand] = useState('');\n  const [newImage, setNewImage] = useState('');\n\n  //PUT //\n  const [updatedName, setUpdatedName] = useState('');\n  const [updatedType, setUpdatedType] = useState('');\n  const [updatedColor, setUpdatedColor] = useState('');\n  const [updatedSize, setUpdatedSize] = useState('');\n  const [updatedBrand, setUpdatedBrand] = useState('');\n  const [updatedImage, setUpdatedImage] = useState('');\n  useEffect(() => {\n    getClothes();\n  }, []);\n  function getClothes() {\n    fetch(MOCK_API_URL).then(data => data.json()).then(data => setClothes(data));\n  }\n\n  // DELETE //\n  function deleteCloth(id) {\n    fetch(`${MOCK_API_URL}/${id}`, {\n      method: 'DELETE'\n    }).then(() => getClothes());\n  }\n  function postNewCloth(e) {\n    e.preventDefault();\n    fetch(MOCK_API_URL, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newName,\n        type: newType,\n        color: newColor,\n        size: newSize,\n        brand: newBrand,\n        image: newImage\n      })\n    }).then(() => {\n      getClothes();\n      setNewName('');\n      setNewType('');\n      setNewSize('');\n      setNewColor('');\n      setNewBrand('');\n      setNewImage('');\n    });\n  }\n\n  // UPDATE //\n  function updatedCloth(e, clothObject) {\n    e.preventDefault();\n    const updatedClothObject = {\n      ...clothObject,\n      name: updatedName,\n      type: updatedType,\n      color: updatedColor,\n      size: updatedSize,\n      brand: updatedBrand,\n      image: updatedImage\n    };\n    fetch(`${MOCK_API_URL}/${clothObject.id}`, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedClothObject)\n    }).then(item => {\n      setClothes(item.data);\n    }).then(() => {\n      getClothes();\n      setUpdatedName('');\n      setUpdatedType('');\n      setUpdatedColor('');\n      setUpdatedSize('');\n      setUpdatedBrand('');\n      setUpdatedImage('');\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: clothes.map((cloth, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clothContainer\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              className: \"card-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"h4--item\",\n                children: \"Item details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 11\n              }, this), \"Name: \", cloth.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 32\n              }, this), \"Type: \", cloth.type, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 32\n              }, this), \"Color: \", cloth.color, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), \"Size: \", cloth.size, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 31\n              }, this), \"Brand: \", cloth.brand, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), \"Image: \", cloth.image, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteCloth(cloth.id),\n              className: \"dlt--btn\",\n              children: /*#__PURE__*/_jsxDEV(DeleteItemButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 78\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"card--update\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => updatedCloth(e, cloth),\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"h4--update\",\n                  children: \"Update This Item?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Update Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => setUpdatedName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 81\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Update Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => setUpdatedType(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 81\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Update Color:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => setUpdatedColor(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 82\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Update Size:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => setUpdatedSize(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 81\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Update Brand:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => setUpdatedBrand(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 82\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Update Image:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => setUpdatedImage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 82\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => updatedCloth(e, cloth),\n                  className: \"udt--btn\",\n                  children: /*#__PURE__*/_jsxDEV(UpdateItemButton, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 86\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this);\n}\n_s(YourCloset, \"C5dhlT3sAXcZDhCiIOXnRIUP7iY=\");\n_c = YourCloset;\nexport default YourCloset;\n\n/*function YourCloset() {\n    const MOCK_API_URL = \"https://66038fa12393662c31cf3170.mockapi.io/12345/clothes\"\n    const [clothes, setClothes] = useState([]);\n   \n   //PUT\n   const [updatedName, setUpdatedName] = useState('');\n   const [updatedType, setUpdatedType] = useState('');\n   const [updatedColor, setUpdatedColor] = useState('');\n   const [updatedSize, setUpdatedSize] = useState('');\n   const [updatedBrand, setUpdatedBrand] = useState('');\n   const [updatedImage, setUpdatedImage] = useState('');\n  \n   useEffect(() => {\n      getClothes();\n    }, []);\n\n  // GET \n  function getClothes() {\n    fetch(MOCK_API_URL)\n      .then(data => data.json())\n      .then(data => setClothes(data))\n      \n  }\n\n\n// DELETE\n  function deleteCloth(id) {\n    fetch(`${MOCK_API_URL}/${id}`,{\n      method: 'DELETE'\n    }).then(() => getClothes())\n  }\n\n// UPDATE\nfunction updatedCloth(e, clothObject) {  \n    e.preventDefault();\n\n    const updatedClothObject = {\n      ...clothObject,\n      name: updatedName,\n      type: updatedType,\n      color: updatedColor,\n      size: updatedSize,\n      brand: updatedBrand,\n      image: updatedImage,\n    }\n    fetch(`${MOCK_API_URL}/${clothObject.id}`, {\n      method: 'PUT',\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify(updatedClothObject),\n    }).then((item) => {\n      setClothes(item.data);\n    }).then(() => {\n      getClothes();\n      setUpdatedName('');\n      setUpdatedType('');\n      setUpdatedColor('');\n      setUpdatedSize('');\n      setUpdatedBrand('');\n      setUpdatedImage('');\n    });\n  }\n\n  return (\n    <div>\n        {clothes.map((cloth, index) => (\n        <div className=\"clothContainer\" key={index}>\n            <Container>\n              <Row>\n                <Col>\n            <Card className=\"card-item\">\n            <h4 className=\"h4--item\">Item details</h4>\n              Name: {cloth.name} <br></br>\n              Type: {cloth.type} <br></br>\n              Color: {cloth.color}<br></br>\n              Size: {cloth.size}<br></br>\n              Brand: {cloth.brand}<br></br>\n              Image: {cloth.image}<br></br>\n            </Card>\n            <button onClick={() => deleteCloth(cloth.id)} className=\"dlt--btn\"><DeleteItemButton /></button>\n            </Col>\n            <Col>\n              <Card className=\"card--update\">\n                <form onSubmit={(e) => updatedCloth(e, cloth)}>\n                  <h4 className=\"h4--update\">Update This Item?</h4>\n                  <label>Update Name:</label>\n                  <input onChange={(e) => setUpdatedName(e.target.value)}></input><br></br>\n                  <label>Update Type:</label>\n                  <input onChange={(e) => setUpdatedType(e.target.value)}></input><br></br>\n      \n                  <label>Update Color:</label>\n                  <input onChange={(e) => setUpdatedColor(e.target.value)}></input><br></br>\n                  \n                  <label>Update Size:</label>\n                  <input onChange={(e) => setUpdatedSize(e.target.value)}></input><br></br>\n                  \n                  <label>Update Brand:</label>\n                  <input onChange={(e) => setUpdatedBrand(e.target.value)}></input><br></br>\n                  \n                  <label>Update Image:</label>\n                  <input onChange={(e) => setUpdatedImage(e.target.value)}></input><br></br>\n                  \n                  <button onClick={(e) => updatedCloth(e, cloth)} className=\"udt--btn\"><UpdateItemButton /></button>\n                </form>\n              </Card>\n            </Col>\n            </Row>\n            </Container>\n        </div>\n        ))}\n    </div>\n  );\n}\n\nexport default YourCloset;\n*/\nvar _c;\n$RefreshReg$(_c, \"YourCloset\");","map":{"version":3,"names":["React","useState","useEffect","DeleteItemButton","UpdateItemButton","Card","Container","Row","Col","jsxDEV","_jsxDEV","YourCloset","_s","MOCK_API_URL","clothes","setClothes","newName","setNewName","newType","setNewType","newColor","setNewColor","newSize","setNewSize","newBrand","setNewBrand","newImage","setNewImage","updatedName","setUpdatedName","updatedType","setUpdatedType","updatedColor","setUpdatedColor","updatedSize","setUpdatedSize","updatedBrand","setUpdatedBrand","updatedImage","setUpdatedImage","getClothes","fetch","then","data","json","deleteCloth","id","method","postNewCloth","e","preventDefault","headers","body","JSON","stringify","name","type","color","size","brand","image","updatedCloth","clothObject","updatedClothObject","item","children","map","cloth","index","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onChange","target","value","_c","$RefreshReg$"],"sources":["/Users/akimotoidzumi/Desktop/Front-End-Assighnment/Promineo_Tech/Week-16-React_Router_and_React_Bootstrap/Unit Final Project/src/Components/YourCloset.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react'  //used state hook and effect fook\nimport DeleteItemButton from '../Components/DeleteItemButton'\nimport UpdateItemButton from '../Components/UpdateItemButton'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction YourCloset() {\n  const MOCK_API_URL = \"https://66038fa12393662c31cf3170.mockapi.io/12345/clothes\"\n  const [clothes, setClothes] = useState([]);\n //POST\n  const [newName, setNewName] = useState('');\n  const [newType, setNewType] = useState('');\n  const [newColor, setNewColor] = useState('');\n  const [newSize, setNewSize] = useState('');\n  const [newBrand, setNewBrand] = useState('');\n  const [newImage, setNewImage] = useState('');\n\n  //PUT //\n  const [updatedName, setUpdatedName] = useState('');\n  const [updatedType, setUpdatedType] = useState('');\n  const [updatedColor, setUpdatedColor] = useState('');\n  const [updatedSize, setUpdatedSize] = useState('');\n  const [updatedBrand, setUpdatedBrand] = useState('');\n  const [updatedImage, setUpdatedImage] = useState('');\n \n useEffect(() => {\n    getClothes();\n  }, []);\n  \n  function getClothes() {\n    fetch(MOCK_API_URL)\n    .then(data => data.json())\n    .then(data => setClothes(data))\n  }\n\n  // DELETE //\n  function deleteCloth(id) {\n    fetch(`${MOCK_API_URL}/${id}`,{\n      method: 'DELETE'\n    }).then(() => getClothes())\n  }\n\n  function postNewCloth(e){\n    e.preventDefault();\n\n    fetch(MOCK_API_URL, {\n      method: 'POST',\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        name: newName,\n        type: newType,\n        color: newColor,\n        size: newSize,\n        brand: newBrand,\n        image: newImage\n      })\n    }).then(() => {\n      getClothes();\n      setNewName('');\n      setNewType('');\n      setNewSize('');\n      setNewColor('');\n      setNewBrand('');\n      setNewImage('');\n    })\n  }\n\n  // UPDATE //\nfunction updatedCloth(e, clothObject) {  \n  e.preventDefault();\n\n  const updatedClothObject = {\n    ...clothObject,\n    name: updatedName,\n    type: updatedType,\n    color: updatedColor,\n    size: updatedSize,\n    brand: updatedBrand,\n    image: updatedImage,\n  }\n  fetch(`${MOCK_API_URL}/${clothObject.id}`, {\n    method: 'PUT',\n    headers: {\"Content-Type\": \"application/json\"},\n    body: JSON.stringify(updatedClothObject),\n  }).then((item) => {\n    setClothes(item.data);\n  }).then(() => {\n    getClothes();\n    setUpdatedName('');\n    setUpdatedType('');\n    setUpdatedColor('');\n    setUpdatedSize('');\n    setUpdatedBrand('');\n    setUpdatedImage('');\n  });\n}\n\n\nreturn (\n  <div>\n      {clothes.map((cloth, index) => (\n      <div className=\"clothContainer\" key={index}>\n          <Container>\n            <Row>\n              <Col>\n          <Card className=\"card-item\">\n          <h4 className=\"h4--item\">Item details</h4>\n            Name: {cloth.name} <br></br>\n            Type: {cloth.type} <br></br>\n            Color: {cloth.color}<br></br>\n            Size: {cloth.size}<br></br>\n            Brand: {cloth.brand}<br></br>\n            Image: {cloth.image}<br></br>\n          </Card>\n          <button onClick={() => deleteCloth(cloth.id)} className=\"dlt--btn\"><DeleteItemButton /></button>\n          </Col>\n          <Col>\n            <Card className=\"card--update\">\n              <form onSubmit={(e) => updatedCloth(e, cloth)}>\n                <h4 className=\"h4--update\">Update This Item?</h4>\n                <label>Update Name:</label>\n                <input onChange={(e) => setUpdatedName(e.target.value)}></input><br></br>\n                <label>Update Type:</label>\n                <input onChange={(e) => setUpdatedType(e.target.value)}></input><br></br>\n    \n                <label>Update Color:</label>\n                <input onChange={(e) => setUpdatedColor(e.target.value)}></input><br></br>\n                \n                <label>Update Size:</label>\n                <input onChange={(e) => setUpdatedSize(e.target.value)}></input><br></br>\n                \n                <label>Update Brand:</label>\n                <input onChange={(e) => setUpdatedBrand(e.target.value)}></input><br></br>\n                \n                <label>Update Image:</label>\n                <input onChange={(e) => setUpdatedImage(e.target.value)}></input><br></br>\n                \n                <button onClick={(e) => updatedCloth(e, cloth)} className=\"udt--btn\"><UpdateItemButton /></button>\n              </form>\n            </Card>\n          </Col>\n          </Row>\n          </Container>\n      </div>\n      ))}\n  </div>\n);\n}\n\nexport default YourCloset;\n\n\n/*function YourCloset() {\n    const MOCK_API_URL = \"https://66038fa12393662c31cf3170.mockapi.io/12345/clothes\"\n    const [clothes, setClothes] = useState([]);\n   \n   //PUT\n   const [updatedName, setUpdatedName] = useState('');\n   const [updatedType, setUpdatedType] = useState('');\n   const [updatedColor, setUpdatedColor] = useState('');\n   const [updatedSize, setUpdatedSize] = useState('');\n   const [updatedBrand, setUpdatedBrand] = useState('');\n   const [updatedImage, setUpdatedImage] = useState('');\n  \n   useEffect(() => {\n      getClothes();\n    }, []);\n\n  // GET \n  function getClothes() {\n    fetch(MOCK_API_URL)\n      .then(data => data.json())\n      .then(data => setClothes(data))\n      \n  }\n\n\n// DELETE\n  function deleteCloth(id) {\n    fetch(`${MOCK_API_URL}/${id}`,{\n      method: 'DELETE'\n    }).then(() => getClothes())\n  }\n\n// UPDATE\nfunction updatedCloth(e, clothObject) {  \n    e.preventDefault();\n\n    const updatedClothObject = {\n      ...clothObject,\n      name: updatedName,\n      type: updatedType,\n      color: updatedColor,\n      size: updatedSize,\n      brand: updatedBrand,\n      image: updatedImage,\n    }\n    fetch(`${MOCK_API_URL}/${clothObject.id}`, {\n      method: 'PUT',\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify(updatedClothObject),\n    }).then((item) => {\n      setClothes(item.data);\n    }).then(() => {\n      getClothes();\n      setUpdatedName('');\n      setUpdatedType('');\n      setUpdatedColor('');\n      setUpdatedSize('');\n      setUpdatedBrand('');\n      setUpdatedImage('');\n    });\n  }\n\n  return (\n    <div>\n        {clothes.map((cloth, index) => (\n        <div className=\"clothContainer\" key={index}>\n            <Container>\n              <Row>\n                <Col>\n            <Card className=\"card-item\">\n            <h4 className=\"h4--item\">Item details</h4>\n              Name: {cloth.name} <br></br>\n              Type: {cloth.type} <br></br>\n              Color: {cloth.color}<br></br>\n              Size: {cloth.size}<br></br>\n              Brand: {cloth.brand}<br></br>\n              Image: {cloth.image}<br></br>\n            </Card>\n            <button onClick={() => deleteCloth(cloth.id)} className=\"dlt--btn\"><DeleteItemButton /></button>\n            </Col>\n            <Col>\n              <Card className=\"card--update\">\n                <form onSubmit={(e) => updatedCloth(e, cloth)}>\n                  <h4 className=\"h4--update\">Update This Item?</h4>\n                  <label>Update Name:</label>\n                  <input onChange={(e) => setUpdatedName(e.target.value)}></input><br></br>\n                  <label>Update Type:</label>\n                  <input onChange={(e) => setUpdatedType(e.target.value)}></input><br></br>\n      \n                  <label>Update Color:</label>\n                  <input onChange={(e) => setUpdatedColor(e.target.value)}></input><br></br>\n                  \n                  <label>Update Size:</label>\n                  <input onChange={(e) => setUpdatedSize(e.target.value)}></input><br></br>\n                  \n                  <label>Update Brand:</label>\n                  <input onChange={(e) => setUpdatedBrand(e.target.value)}></input><br></br>\n                  \n                  <label>Update Image:</label>\n                  <input onChange={(e) => setUpdatedImage(e.target.value)}></input><br></br>\n                  \n                  <button onClick={(e) => updatedCloth(e, cloth)} className=\"udt--btn\"><UpdateItemButton /></button>\n                </form>\n              </Card>\n            </Col>\n            </Row>\n            </Container>\n        </div>\n        ))}\n    </div>\n  );\n}\n\nexport default YourCloset;\n*/"],"mappings":"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,EAAA,CA7IQD,UAAU;AAAAoE,EAAA,GAAVpE,UAAU;AA+InB,eAAeA,UAAU;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlHA,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}