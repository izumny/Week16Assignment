{"ast":null,"code":"var _jsxFileName = \"/Users/akimotoidzumi/Desktop/Front-End-Assighnment/Promineo_Tech/Week-16-React_Router_and_React_Bootstrap/Unit Final Project/src/Components/UpdateItemButton.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UpdateItemButton() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [updatedInfo, setUpdatedInfo] = useState(null);\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n  const handleUpdate = () => {\n    const updatedCloth = {};\n    setUpdatedInfo(updatedCloth);\n    handleShowModal();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"warning\",\n      onClick: handleUpdate,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Updated Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: updatedInfo ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your item was successfully updated!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseModal,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(UpdateItemButton, \"dR6FEqm44hFqBC5OxIWpIjuZk+o=\");\n_c = UpdateItemButton;\nexport default UpdateItemButton;\n\n/*const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"warning\" onClick={handleShow}>\n        Update\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Updated Item</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Your item was successfully updated!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n              OK\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n} */\nvar _c;\n$RefreshReg$(_c, \"UpdateItemButton\");","map":{"version":3,"names":["React","useState","Button","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateItemButton","_s","showModal","setShowModal","updatedInfo","setUpdatedInfo","handleCloseModal","handleShowModal","handleUpdate","updatedCloth","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","Header","closeButton","Title","Body","Footer","_c","$RefreshReg$"],"sources":["/Users/akimotoidzumi/Desktop/Front-End-Assighnment/Promineo_Tech/Week-16-React_Router_and_React_Bootstrap/Unit Final Project/src/Components/UpdateItemButton.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction UpdateItemButton() {\n    const [showModal, setShowModal] = useState(false);\n    const [updatedInfo, setUpdatedInfo] = useState(null);\n  \n    const handleCloseModal = () => setShowModal(false);\n    const handleShowModal = () => setShowModal(true);\n\n    const handleUpdate = () => {\n      const updatedCloth = {};\n      setUpdatedInfo(updatedCloth);\n      handleShowModal();\n    };\n  \n    return (\n      <>\n        <Button variant=\"warning\" onClick={handleUpdate}>\n          Update\n        </Button>\n  \n        <Modal show={showModal} onHide={handleCloseModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Updated Item</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{updatedInfo ? (\n                        <p>Your item was successfully updated!</p>\n                    ) : (\n                        <p>Loading...</p>\n                    )}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleCloseModal}>\n                OK\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n \n  export default UpdateItemButton;\n\n  /*const [show, setShow] = useState(false);\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n  \n    return (\n      <>\n        <Button variant=\"warning\" onClick={handleShow}>\n          Update\n        </Button>\n  \n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Updated Item</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Your item was successfully updated!</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n                OK\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  } */"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMa,gBAAgB,GAAGA,CAAA,KAAMH,YAAY,CAAC,KAAK,CAAC;EAClD,MAAMI,eAAe,GAAGA,CAAA,KAAMJ,YAAY,CAAC,IAAI,CAAC;EAEhD,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAG,CAAC,CAAC;IACvBJ,cAAc,CAACI,YAAY,CAAC;IAC5BF,eAAe,EAAE;EACnB,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA,CAACH,MAAM;MAACiB,OAAO,EAAC,SAAS;MAACC,OAAO,EAAEJ,YAAa;MAAAE,QAAA,EAAC;IAEjD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAETnB,OAAA,CAACF,KAAK;MAACsB,IAAI,EAAEf,SAAU;MAACgB,MAAM,EAAEZ,gBAAiB;MAAAI,QAAA,gBAC/Cb,OAAA,CAACF,KAAK,CAACwB,MAAM;QAACC,WAAW;QAAAV,QAAA,eACvBb,OAAA,CAACF,KAAK,CAAC0B,KAAK;UAAAX,QAAA,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAc;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1B,eACfnB,OAAA,CAACF,KAAK,CAAC2B,IAAI;QAAAZ,QAAA,EAAEN,WAAW,gBACVP,OAAA;UAAAa,QAAA,EAAG;QAAmC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,gBAE1CnB,OAAA;UAAAa,QAAA,EAAG;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAChB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc,eACzBnB,OAAA,CAACF,KAAK,CAAC4B,MAAM;QAAAb,QAAA,eACXb,OAAA,CAACH,MAAM;UAACiB,OAAO,EAAC,WAAW;UAACC,OAAO,EAAEN,gBAAiB;UAAAI,QAAA,EAAC;QAEvD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT;EAAA,gBACP;AAEP;AAACf,EAAA,CApCMD,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AAsCvB,eAAeA,gBAAgB;;AAE/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBE,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}